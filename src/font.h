#pragma once

// -------------------------------------- Constants ------------------------------------- //
const char Chip8Fontset[80] = { \
	0xF0, 0x90, 0x90, 0x90, 0xF0,// 0
	0x20, 0x60, 0x20, 0x20, 0x70,// 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0,// 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0,// 3
	0x90, 0x90, 0xF0, 0x10, 0x10,// 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0,// 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0,// 6
	0xF0, 0x10, 0x20, 0x40, 0x40,// 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0,// 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0,// 9
	0xF0, 0x90, 0xF0, 0x90, 0x90,// A
	0xE0, 0x90, 0xE0, 0x90, 0xE0,// B
	0xF0, 0x80, 0x80, 0x80, 0xF0,// C
	0xE0, 0x90, 0x90, 0x90, 0xE0,// D
	0xF0, 0x80, 0xF0, 0x80, 0xF0,// E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
}; // 8 columns (bits) per 5 lines sprites


const char SCHIPFontset[160] = {  \
	0xff, 0xff, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xff, // 0
	0x18, 0x78, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0xff, 0xff, // 1
	0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, // 2
	0xff, 0xff, 0x03, 0x03, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, // 3
	0xc3, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0x03, 0x03, 0x03, 0x03, // 4
	0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, // 5
	0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, // 6
	0xff, 0xff, 0x03, 0x03, 0x06, 0x0c, 0x18, 0x18, 0x18, 0x18, // 7
	0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, // 8
	0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, 0x03, 0x03, 0xff, 0xff, // 9
	0x7e, 0xff, 0xc3, 0xc3, 0xc3, 0xff, 0xff, 0xc3, 0xc3, 0xc3, // A
	0xfc, 0xfc, 0xc3, 0xc3, 0xfc, 0xfc, 0xc3, 0xc3, 0xfc, 0xfc, // B
	0x3c, 0xff, 0xc3, 0xc0, 0xc0, 0xc0, 0xc0, 0xc3, 0xff, 0x3c, // C
	0xfc, 0xfe, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xfe, 0xfc, // D
	0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, // E
	0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, 0xc0, 0xc0, 0xc0, 0xc0  // F
}; // 8 columns (bits) per 10 lines sprites

const int font_logo[165] = { \
	0x308, 0x309, 0x30A, 0x30B, 0x348, 0x34B, 0x388, 0x38B, 0x3C8, 0x3CB, 0x408, 0x40B, 0x448, 0x44B, 0x488, 0x48B, 0x4C8, 0x4C9, 0x4CA, 0x4CB,					// O
	0x30D, 0x30E, 0x30F, 0x34D, 0x350, 0x38D, 0x390, 0x3CD, 0x3CF, 0x40D, 0x40E, 0x44D, 0x44F, 0x48D, 0x490, 0x4CD, 0x4D0, 										// R
	0x312, 0x352, 0x392, 0x3D2, 0x412, 0x452, 0x492, 0x4D2, 																									// I
	0x314, 0x315, 0x316, 0x317, 0x354, 0x357, 0x394, 0x397, 0x3D4, 0x3D7, 0x414, 0x417, 0x454, 0x457, 0x494, 0x497, 0x4D4, 0x4D5, 0x4D6, 0x4D7, 				// O
	0x319, 0x31D, 0x359, 0x35A, 0x35D, 0x399, 0x39A, 0x39D, 0x3D9, 0x3DB, 0x3DD, 0x419, 0x41B, 0x41D, 0x459, 0x45C, 0x45D, 0x499, 0x49C, 0x49D, 0x4D9, 0x4DD,	// N
	0x321, 0x322, 0x323, 0x324, 0x361, 0x3A1, 0x3E1, 0x421, 0x461, 0x4A1, 0x4E1, 0x4E2, 0x4E3, 0x4E4,				 											// C
	0x326, 0x329, 0x366, 0x369, 0x3A6, 0x3A9, 0x3E6, 0x3E7, 0x3E8, 0x3E9, 0x426, 0x429, 0x466, 0x469, 0x4A6, 0x4A9, 0x4E6, 0x4E9,								// H
	0x32B, 0x36B, 0x3AB, 0x3EB, 0x42B, 0x46B, 0x4AB, 0x4EB,																										// I
	0x32D, 0x32E, 0x32F, 0x36D, 0x370, 0x3AD, 0x3B0, 0x3ED, 0x3EF, 0x42D, 0x42E, 0x46D, 0x4AD, 0x4ED,															// P
	0x431, 0x432,																																				// -
	0x334, 0x335, 0x336, 0x337, 0x374, 0x377, 0x3B4, 0x3B7, 0x3F4, 0x3F5, 0x3F6, 0x3F7, 0x434, 0x437, 0x474, 0x477, 0x4B4, 0x4B7, 0x4F4, 0x4F5, 0x4F6, 0x4F7	// 8
};
